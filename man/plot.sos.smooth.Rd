% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_sos_smooth.R
\name{plot.sos.smooth}
\alias{plot.sos.smooth}
\title{Plotting smooths on the sphere}
\usage{
\method{plot}{sos.smooth}(x, n = 40, xlim = NULL, ylim = NULL,
  maxpo = 10000, too.far = 0.1, phi = 30, theta = 30,
  trans = identity, scheme = 0, seWithMean = FALSE,
  unconditional = FALSE, ...)
}
\arguments{
\item{scheme}{if 0 the smooth effect is plot on the sphere. If 1 the smooth effect is plotted
on the two hemispheres.}
}
\description{
XXX
}
\examples{
library(mgcViz)
set.seed(0)
n <- 400

f <- function(la,lo) { ## a test function...
  sin(lo)*cos(la-.3)
}

## generate with uniform density on sphere...  
lo <- runif(n)*2*pi-pi ## longitude
la <- runif(3*n)*pi-pi/2
ind <- runif(3*n)<=cos(la)
la <- la[ind];
la <- la[1:n]

ff <- f(la,lo)
y <- ff + rnorm(n)*.2 ## test data

## generate data for plotting truth...
lam <- seq(-pi/2,pi/2,length=30)
lom <- seq(-pi,pi,length=60)
gr <- expand.grid(la=lam,lo=lom)
fz <- f(gr$la,gr$lo)
zm <- matrix(fz,30,60)

require(mgcv)
dat <- data.frame(la = la *180/pi,lo = lo *180/pi,y=y)

## fit spline on sphere model...
bp <- gam(y~s(la,lo,bs="sos",k=60),data=dat)
bp <- getViz(bp)

# Plot on sphere
plot(sm(bp, 1), scheme=0) + l_fitRaster() + l_fitContour() + 
   l_points(shape = 19) + l_rug() + l_coordContour() + l_bound() 
 
# Plotting as in standard 2D plots
plot(sm(bp, 1), scheme=1) + l_fitRaster() + l_fitContour() + 
           l_points(shape = 19) + l_rug()
}
